name: PR Policy
on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled, ready_for_review, reopened]

permissions:
  contents: read
  pull-requests: read

jobs:
  gate:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR naming, labels and approvals
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const head = pr.head.ref;
            const okBranch = /^(feature|fix|chore)\//.test(head);
            if (!okBranch) {
              core.setFailed(`La rama debe empezar por feature/, fix/ o chore/ (actual: ${head})`);
              return;
            }
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number
            });
            if (!labels || labels.length < 1) {
              core.setFailed("Añade al menos 1 label al PR (p.ej. feature, fix, security).");
              return;
            }
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner, repo: context.repo.repo, pull_number: pr.number
            });
            const approved = reviews?.some(r => r.state === "APPROVED");
            if (!approved) {
              core.setFailed("Se requiere al menos 1 aprobación (Review → Approve).");
              return;
            }
            core.info("PR cumple política mínima (branch, labels, approvals).")
