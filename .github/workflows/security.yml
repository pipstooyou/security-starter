name: Security Pipeline
on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

env:
      STAGING_URL: ${{ secrets.STAGING_URL }}

jobs:
  semgrep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: returntocorp/semgrep-action@v1
        with:
          config: p/owasp-top-ten
          generateSarif: "1"
      # subir SARIF sólo en GitHub, no en act
      - if: ${{ env.ACT != 'true' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  trivy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          ignore-unfixed: true
          format: sarif
          output: trivy.sarif
      # subir SARIF sólo en GitHub, no en act
      - if: ${{ env.ACT != 'true' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

  zap_baseline:
    runs-on: ubuntu-latest
    steps:
      - name: ZAP Baseline Scan
        if: ${{ env.ACT != 'true' }}
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: ${{ env.STAGING_URL }}
          rules_file_name: 'security/zap/.zap/rules.tsv'
          cmd_options: "-a"
      - name: Subir reporte ZAP
        if: ${{ env.ACT != 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: report_html.html
